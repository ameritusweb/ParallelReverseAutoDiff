### YamlMime:ManagedReference
items:
- uid: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
  commentId: T:ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
  id: BackwardResultBuilder
  parent: ParallelReverseAutoDiff.RMAD
  children:
  - ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddBetaGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  - ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddBiasGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  - ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddDeepInputGradient(ParallelReverseAutoDiff.RMAD.DeepMatrix)
  - ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddFiltersGradient(ParallelReverseAutoDiff.RMAD.DeepMatrix[])
  - ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddGammaGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  - ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddInputGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  - ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddInputGradientArray(ParallelReverseAutoDiff.RMAD.DeepMatrix)
  - ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddScalingGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  - ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddWeightGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  - ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.Build
  langs:
  - csharp
  - vb
  name: BackwardResultBuilder
  nameWithType: BackwardResultBuilder
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
  type: Class
  source:
    remote:
      path: src/RMAD/BackwardResultBuilder.cs
      branch: main
      repo: https://github.com/ameritusweb/ParallelReverseAutoDiff.git
    id: BackwardResultBuilder
    path: ../../src/RMAD/BackwardResultBuilder.cs
    startLine: 13
  assemblies:
  - ParallelReverseAutoDiff
  namespace: ParallelReverseAutoDiff.RMAD
  summary: The backward result builder.
  example: []
  syntax:
    content: public class BackwardResultBuilder
    content.vb: Public Class BackwardResultBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddInputGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  commentId: M:ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddInputGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  id: AddInputGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  parent: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
  langs:
  - csharp
  - vb
  name: AddInputGradient(Matrix)
  nameWithType: BackwardResultBuilder.AddInputGradient(Matrix)
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddInputGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  type: Method
  source:
    remote:
      path: src/RMAD/BackwardResultBuilder.cs
      branch: main
      repo: https://github.com/ameritusweb/ParallelReverseAutoDiff.git
    id: AddInputGradient
    path: ../../src/RMAD/BackwardResultBuilder.cs
    startLine: 25
  assemblies:
  - ParallelReverseAutoDiff
  namespace: ParallelReverseAutoDiff.RMAD
  summary: Add input gradient to the backward result.
  example: []
  syntax:
    content: public BackwardResultBuilder AddInputGradient(Matrix matrix)
    parameters:
    - id: matrix
      type: ParallelReverseAutoDiff.RMAD.Matrix
      description: The matrix to add.
    return:
      type: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
      description: The backward result builder.
    content.vb: Public Function AddInputGradient(matrix As Matrix) As BackwardResultBuilder
  overload: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddInputGradient*
- uid: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddInputGradientArray(ParallelReverseAutoDiff.RMAD.DeepMatrix)
  commentId: M:ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddInputGradientArray(ParallelReverseAutoDiff.RMAD.DeepMatrix)
  id: AddInputGradientArray(ParallelReverseAutoDiff.RMAD.DeepMatrix)
  parent: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
  langs:
  - csharp
  - vb
  name: AddInputGradientArray(DeepMatrix)
  nameWithType: BackwardResultBuilder.AddInputGradientArray(DeepMatrix)
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddInputGradientArray(ParallelReverseAutoDiff.RMAD.DeepMatrix)
  type: Method
  source:
    remote:
      path: src/RMAD/BackwardResultBuilder.cs
      branch: main
      repo: https://github.com/ameritusweb/ParallelReverseAutoDiff.git
    id: AddInputGradientArray
    path: ../../src/RMAD/BackwardResultBuilder.cs
    startLine: 38
  assemblies:
  - ParallelReverseAutoDiff
  namespace: ParallelReverseAutoDiff.RMAD
  summary: Add input gradient array to the backward result.
  example: []
  syntax:
    content: public BackwardResultBuilder AddInputGradientArray(DeepMatrix matrix)
    parameters:
    - id: matrix
      type: ParallelReverseAutoDiff.RMAD.DeepMatrix
      description: The deep matrix to add.
    return:
      type: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
      description: The backward result builder.
    content.vb: Public Function AddInputGradientArray(matrix As DeepMatrix) As BackwardResultBuilder
  overload: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddInputGradientArray*
- uid: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddDeepInputGradient(ParallelReverseAutoDiff.RMAD.DeepMatrix)
  commentId: M:ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddDeepInputGradient(ParallelReverseAutoDiff.RMAD.DeepMatrix)
  id: AddDeepInputGradient(ParallelReverseAutoDiff.RMAD.DeepMatrix)
  parent: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
  langs:
  - csharp
  - vb
  name: AddDeepInputGradient(DeepMatrix)
  nameWithType: BackwardResultBuilder.AddDeepInputGradient(DeepMatrix)
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddDeepInputGradient(ParallelReverseAutoDiff.RMAD.DeepMatrix)
  type: Method
  source:
    remote:
      path: src/RMAD/BackwardResultBuilder.cs
      branch: main
      repo: https://github.com/ameritusweb/ParallelReverseAutoDiff.git
    id: AddDeepInputGradient
    path: ../../src/RMAD/BackwardResultBuilder.cs
    startLine: 55
  assemblies:
  - ParallelReverseAutoDiff
  namespace: ParallelReverseAutoDiff.RMAD
  summary: Add deep input gradient to the backward result.
  example: []
  syntax:
    content: public BackwardResultBuilder AddDeepInputGradient(DeepMatrix matrix)
    parameters:
    - id: matrix
      type: ParallelReverseAutoDiff.RMAD.DeepMatrix
      description: The deep matrix to add.
    return:
      type: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
      description: The backward result builder.
    content.vb: Public Function AddDeepInputGradient(matrix As DeepMatrix) As BackwardResultBuilder
  overload: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddDeepInputGradient*
- uid: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddFiltersGradient(ParallelReverseAutoDiff.RMAD.DeepMatrix[])
  commentId: M:ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddFiltersGradient(ParallelReverseAutoDiff.RMAD.DeepMatrix[])
  id: AddFiltersGradient(ParallelReverseAutoDiff.RMAD.DeepMatrix[])
  parent: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
  langs:
  - csharp
  - vb
  name: AddFiltersGradient(DeepMatrix[])
  nameWithType: BackwardResultBuilder.AddFiltersGradient(DeepMatrix[])
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddFiltersGradient(ParallelReverseAutoDiff.RMAD.DeepMatrix[])
  type: Method
  source:
    remote:
      path: src/RMAD/BackwardResultBuilder.cs
      branch: main
      repo: https://github.com/ameritusweb/ParallelReverseAutoDiff.git
    id: AddFiltersGradient
    path: ../../src/RMAD/BackwardResultBuilder.cs
    startLine: 68
  assemblies:
  - ParallelReverseAutoDiff
  namespace: ParallelReverseAutoDiff.RMAD
  summary: Add filters gradient to the backward result.
  example: []
  syntax:
    content: public BackwardResultBuilder AddFiltersGradient(DeepMatrix[] matrix)
    parameters:
    - id: matrix
      type: ParallelReverseAutoDiff.RMAD.DeepMatrix[]
      description: The deep matrix to add.
    return:
      type: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
      description: The backward result builder.
    content.vb: Public Function AddFiltersGradient(matrix As DeepMatrix()) As BackwardResultBuilder
  overload: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddFiltersGradient*
  nameWithType.vb: BackwardResultBuilder.AddFiltersGradient(DeepMatrix())
  fullName.vb: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddFiltersGradient(ParallelReverseAutoDiff.RMAD.DeepMatrix())
  name.vb: AddFiltersGradient(DeepMatrix())
- uid: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddWeightGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  commentId: M:ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddWeightGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  id: AddWeightGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  parent: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
  langs:
  - csharp
  - vb
  name: AddWeightGradient(Matrix)
  nameWithType: BackwardResultBuilder.AddWeightGradient(Matrix)
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddWeightGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  type: Method
  source:
    remote:
      path: src/RMAD/BackwardResultBuilder.cs
      branch: main
      repo: https://github.com/ameritusweb/ParallelReverseAutoDiff.git
    id: AddWeightGradient
    path: ../../src/RMAD/BackwardResultBuilder.cs
    startLine: 80
  assemblies:
  - ParallelReverseAutoDiff
  namespace: ParallelReverseAutoDiff.RMAD
  summary: Add weight gradient to the backward result.
  example: []
  syntax:
    content: public BackwardResultBuilder AddWeightGradient(Matrix matrix)
    parameters:
    - id: matrix
      type: ParallelReverseAutoDiff.RMAD.Matrix
      description: The matrix to add.
    return:
      type: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
      description: The backward result builder.
    content.vb: Public Function AddWeightGradient(matrix As Matrix) As BackwardResultBuilder
  overload: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddWeightGradient*
- uid: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddScalingGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  commentId: M:ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddScalingGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  id: AddScalingGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  parent: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
  langs:
  - csharp
  - vb
  name: AddScalingGradient(Matrix)
  nameWithType: BackwardResultBuilder.AddScalingGradient(Matrix)
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddScalingGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  type: Method
  source:
    remote:
      path: src/RMAD/BackwardResultBuilder.cs
      branch: main
      repo: https://github.com/ameritusweb/ParallelReverseAutoDiff.git
    id: AddScalingGradient
    path: ../../src/RMAD/BackwardResultBuilder.cs
    startLine: 92
  assemblies:
  - ParallelReverseAutoDiff
  namespace: ParallelReverseAutoDiff.RMAD
  summary: Add scaling gradient to the backward result.
  example: []
  syntax:
    content: public BackwardResultBuilder AddScalingGradient(Matrix matrix)
    parameters:
    - id: matrix
      type: ParallelReverseAutoDiff.RMAD.Matrix
      description: The matrix to add.
    return:
      type: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
      description: The backward result builder.
    content.vb: Public Function AddScalingGradient(matrix As Matrix) As BackwardResultBuilder
  overload: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddScalingGradient*
- uid: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddBetaGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  commentId: M:ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddBetaGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  id: AddBetaGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  parent: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
  langs:
  - csharp
  - vb
  name: AddBetaGradient(Matrix)
  nameWithType: BackwardResultBuilder.AddBetaGradient(Matrix)
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddBetaGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  type: Method
  source:
    remote:
      path: src/RMAD/BackwardResultBuilder.cs
      branch: main
      repo: https://github.com/ameritusweb/ParallelReverseAutoDiff.git
    id: AddBetaGradient
    path: ../../src/RMAD/BackwardResultBuilder.cs
    startLine: 104
  assemblies:
  - ParallelReverseAutoDiff
  namespace: ParallelReverseAutoDiff.RMAD
  summary: Add beta gradient to the backward result.
  example: []
  syntax:
    content: public BackwardResultBuilder AddBetaGradient(Matrix matrix)
    parameters:
    - id: matrix
      type: ParallelReverseAutoDiff.RMAD.Matrix
      description: The matrix to add.
    return:
      type: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
      description: The backward result builder.
    content.vb: Public Function AddBetaGradient(matrix As Matrix) As BackwardResultBuilder
  overload: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddBetaGradient*
- uid: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddGammaGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  commentId: M:ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddGammaGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  id: AddGammaGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  parent: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
  langs:
  - csharp
  - vb
  name: AddGammaGradient(Matrix)
  nameWithType: BackwardResultBuilder.AddGammaGradient(Matrix)
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddGammaGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  type: Method
  source:
    remote:
      path: src/RMAD/BackwardResultBuilder.cs
      branch: main
      repo: https://github.com/ameritusweb/ParallelReverseAutoDiff.git
    id: AddGammaGradient
    path: ../../src/RMAD/BackwardResultBuilder.cs
    startLine: 116
  assemblies:
  - ParallelReverseAutoDiff
  namespace: ParallelReverseAutoDiff.RMAD
  summary: Add gamma gradient to the backward result.
  example: []
  syntax:
    content: public BackwardResultBuilder AddGammaGradient(Matrix matrix)
    parameters:
    - id: matrix
      type: ParallelReverseAutoDiff.RMAD.Matrix
      description: The matrix to add.
    return:
      type: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
      description: The backward result builder.
    content.vb: Public Function AddGammaGradient(matrix As Matrix) As BackwardResultBuilder
  overload: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddGammaGradient*
- uid: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddBiasGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  commentId: M:ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddBiasGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  id: AddBiasGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  parent: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
  langs:
  - csharp
  - vb
  name: AddBiasGradient(Matrix)
  nameWithType: BackwardResultBuilder.AddBiasGradient(Matrix)
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddBiasGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  type: Method
  source:
    remote:
      path: src/RMAD/BackwardResultBuilder.cs
      branch: main
      repo: https://github.com/ameritusweb/ParallelReverseAutoDiff.git
    id: AddBiasGradient
    path: ../../src/RMAD/BackwardResultBuilder.cs
    startLine: 128
  assemblies:
  - ParallelReverseAutoDiff
  namespace: ParallelReverseAutoDiff.RMAD
  summary: Add bias gradient to the backward result.
  example: []
  syntax:
    content: public BackwardResultBuilder AddBiasGradient(Matrix matrix)
    parameters:
    - id: matrix
      type: ParallelReverseAutoDiff.RMAD.Matrix
      description: The matrix to add.
    return:
      type: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
      description: The backward result builder.
    content.vb: Public Function AddBiasGradient(matrix As Matrix) As BackwardResultBuilder
  overload: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddBiasGradient*
- uid: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.Build
  commentId: M:ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.Build
  id: Build
  parent: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: BackwardResultBuilder.Build()
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.Build()
  type: Method
  source:
    remote:
      path: src/RMAD/BackwardResultBuilder.cs
      branch: main
      repo: https://github.com/ameritusweb/ParallelReverseAutoDiff.git
    id: Build
    path: ../../src/RMAD/BackwardResultBuilder.cs
    startLine: 139
  assemblies:
  - ParallelReverseAutoDiff
  namespace: ParallelReverseAutoDiff.RMAD
  summary: Builds the backward result.
  example: []
  syntax:
    content: public BackwardResult Build()
    return:
      type: ParallelReverseAutoDiff.RMAD.BackwardResult
      description: The backward result.
    content.vb: Public Function Build() As BackwardResult
  overload: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.Build*
references:
- uid: ParallelReverseAutoDiff.RMAD
  commentId: N:ParallelReverseAutoDiff.RMAD
  href: ParallelReverseAutoDiff.html
  name: ParallelReverseAutoDiff.RMAD
  nameWithType: ParallelReverseAutoDiff.RMAD
  fullName: ParallelReverseAutoDiff.RMAD
  spec.csharp:
  - uid: ParallelReverseAutoDiff
    name: ParallelReverseAutoDiff
    href: ParallelReverseAutoDiff.html
  - name: .
  - uid: ParallelReverseAutoDiff.RMAD
    name: RMAD
    href: ParallelReverseAutoDiff.RMAD.html
  spec.vb:
  - uid: ParallelReverseAutoDiff
    name: ParallelReverseAutoDiff
    href: ParallelReverseAutoDiff.html
  - name: .
  - uid: ParallelReverseAutoDiff.RMAD
    name: RMAD
    href: ParallelReverseAutoDiff.RMAD.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddInputGradient*
  commentId: Overload:ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddInputGradient
  href: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.html#ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddInputGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  name: AddInputGradient
  nameWithType: BackwardResultBuilder.AddInputGradient
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddInputGradient
- uid: ParallelReverseAutoDiff.RMAD.Matrix
  commentId: T:ParallelReverseAutoDiff.RMAD.Matrix
  parent: ParallelReverseAutoDiff.RMAD
  href: ParallelReverseAutoDiff.RMAD.Matrix.html
  name: Matrix
  nameWithType: Matrix
  fullName: ParallelReverseAutoDiff.RMAD.Matrix
- uid: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
  commentId: T:ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
  parent: ParallelReverseAutoDiff.RMAD
  href: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.html
  name: BackwardResultBuilder
  nameWithType: BackwardResultBuilder
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder
- uid: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddInputGradientArray*
  commentId: Overload:ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddInputGradientArray
  href: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.html#ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddInputGradientArray(ParallelReverseAutoDiff.RMAD.DeepMatrix)
  name: AddInputGradientArray
  nameWithType: BackwardResultBuilder.AddInputGradientArray
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddInputGradientArray
- uid: ParallelReverseAutoDiff.RMAD.DeepMatrix
  commentId: T:ParallelReverseAutoDiff.RMAD.DeepMatrix
  parent: ParallelReverseAutoDiff.RMAD
  href: ParallelReverseAutoDiff.RMAD.DeepMatrix.html
  name: DeepMatrix
  nameWithType: DeepMatrix
  fullName: ParallelReverseAutoDiff.RMAD.DeepMatrix
- uid: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddDeepInputGradient*
  commentId: Overload:ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddDeepInputGradient
  href: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.html#ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddDeepInputGradient(ParallelReverseAutoDiff.RMAD.DeepMatrix)
  name: AddDeepInputGradient
  nameWithType: BackwardResultBuilder.AddDeepInputGradient
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddDeepInputGradient
- uid: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddFiltersGradient*
  commentId: Overload:ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddFiltersGradient
  href: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.html#ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddFiltersGradient(ParallelReverseAutoDiff.RMAD.DeepMatrix[])
  name: AddFiltersGradient
  nameWithType: BackwardResultBuilder.AddFiltersGradient
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddFiltersGradient
- uid: ParallelReverseAutoDiff.RMAD.DeepMatrix[]
  isExternal: true
  href: ParallelReverseAutoDiff.RMAD.DeepMatrix.html
  name: DeepMatrix[]
  nameWithType: DeepMatrix[]
  fullName: ParallelReverseAutoDiff.RMAD.DeepMatrix[]
  nameWithType.vb: DeepMatrix()
  fullName.vb: ParallelReverseAutoDiff.RMAD.DeepMatrix()
  name.vb: DeepMatrix()
  spec.csharp:
  - uid: ParallelReverseAutoDiff.RMAD.DeepMatrix
    name: DeepMatrix
    href: ParallelReverseAutoDiff.RMAD.DeepMatrix.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: ParallelReverseAutoDiff.RMAD.DeepMatrix
    name: DeepMatrix
    href: ParallelReverseAutoDiff.RMAD.DeepMatrix.html
  - name: (
  - name: )
- uid: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddWeightGradient*
  commentId: Overload:ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddWeightGradient
  href: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.html#ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddWeightGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  name: AddWeightGradient
  nameWithType: BackwardResultBuilder.AddWeightGradient
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddWeightGradient
- uid: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddScalingGradient*
  commentId: Overload:ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddScalingGradient
  href: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.html#ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddScalingGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  name: AddScalingGradient
  nameWithType: BackwardResultBuilder.AddScalingGradient
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddScalingGradient
- uid: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddBetaGradient*
  commentId: Overload:ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddBetaGradient
  href: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.html#ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddBetaGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  name: AddBetaGradient
  nameWithType: BackwardResultBuilder.AddBetaGradient
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddBetaGradient
- uid: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddGammaGradient*
  commentId: Overload:ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddGammaGradient
  href: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.html#ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddGammaGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  name: AddGammaGradient
  nameWithType: BackwardResultBuilder.AddGammaGradient
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddGammaGradient
- uid: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddBiasGradient*
  commentId: Overload:ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddBiasGradient
  href: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.html#ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddBiasGradient(ParallelReverseAutoDiff.RMAD.Matrix)
  name: AddBiasGradient
  nameWithType: BackwardResultBuilder.AddBiasGradient
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.AddBiasGradient
- uid: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.Build*
  commentId: Overload:ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.Build
  href: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.html#ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.Build
  name: Build
  nameWithType: BackwardResultBuilder.Build
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResultBuilder.Build
- uid: ParallelReverseAutoDiff.RMAD.BackwardResult
  commentId: T:ParallelReverseAutoDiff.RMAD.BackwardResult
  parent: ParallelReverseAutoDiff.RMAD
  href: ParallelReverseAutoDiff.RMAD.BackwardResult.html
  name: BackwardResult
  nameWithType: BackwardResult
  fullName: ParallelReverseAutoDiff.RMAD.BackwardResult
